apply plugin: 'groovy'

project.ext {
    VERSION="0.0.1"
    STAGE="build/stage/groovy-ngs-utils-$VERSION"
    GROOVY_VERSION="2.3.4"
    //GROOVY_VERSION="2.1.1"
}

/*
 TODO: use proguard to shrink down the output jars
 */
/*

buildscript {
    repositories {
        flatDir dirs: '/Users/simon/work/proguard/proguard4.9/lib'
    }
    dependencies {
        classpath ':proguard'
    }
}
*/

repositories {
    mavenCentral()
    maven { 
        name "biojava"
        url "http://www.biojava.org/download/maven/" 
    }
    maven {
      name "gral" 
      url "http://mvn.erichseifert.de/maven2"
    }
}

configurations {
  compile
}

dependencies {
     compile group: 'org.codehaus.groovy', name: 'groovy', version: "$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy-xml', version: "$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy-ant', version: "$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy-json', version: "$GROOVY_VERSION"
     compile group: 'org.codehaus.groovy', name: 'groovy-sql', version: "$GROOVY_VERSION"
     compile group: 'org.apache.ivy', name:'ivy', version:'2.2.0' 
     compile group: 'org.biojava', name:'biojava3-core', version:'3.0.6' 
     compile group: 'org.biojava', name:'biojava3-alignment', version:'3.0.6' 
     compile 'com.lowagie:itext:2.1.7'
     compile 'org.apache.commons:commons-math3:3.0'
     compile 'commons-cli:commons-cli:1.3'
     compile 'org.utgenome.thirdparty:picard:1.102.0'
     compile 'com.xlson.groovycsv:groovycsv:1.0'
     compile group: 'de.erichseifert.gral', name: 'gral-core', version: '0.10'
     compile 'log4j:log4j:1.2.17'
     compile 'org.xerial:sqlite-jdbc:3.8.6'
     compile files(fileTree(dir:'lib', includes:['*.jar']))
}

// Bundle all dependencies into output library
jar {
    from configurations.compile.grep { !it.name.startsWith("cramtools") }.collect { 
        println "Including $it"; 
        it.isDirectory() ? it : zipTree(it) 
    }
    from configurations.compile.grep { it.name.startsWith("cramtools") }.collect { 
        println "Including $it"; 
        it.isDirectory() ? it : zipTree(it) 
    }

    exclude { details ->
        if(details.file.path.startsWith("groovy/stream"))
            return false
        if(details.file.path.startsWith("groovy/"))
            return true
        return false
    }

    exclude "groovy/**"
    exclude "org/codehaus/**"
    exclude "META-INF/groovy*"
    exclude "META-INF/**/*groovy*"
    exclude "META-INF/BCKEY*"
    exclude "org/bouncycastle/**"
}

groovydoc {
    
}

task doc << {
    groovydoc {
        packageNames = ['']
        destinationDir = new File('doc')
        source = 'src/main/groovy'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

